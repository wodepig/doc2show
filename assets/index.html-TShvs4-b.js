import{_ as t,c as i,a,o as l}from"./app-D6s_7T7O.js";const s="/doc2show/img/4/1.png",n="/doc2show/img/4/2.png",d="/doc2show/img/4/3.png",p={};function o(c,e){return l(),i("div",null,e[0]||(e[0]=[a(`<p>小伙伴们大家好，我是村长，很高兴又和大家见面了。</p><p>本篇我们将通过一个完整的个人博客案例来驱动学习 Nuxt 核心知识，尽量做到理论实践相结合，这样大家能够更牢固的掌握所学知识。</p><h2 id="内容概要" tabindex="-1"><a class="header-anchor" href="#内容概要"><span>内容概要</span></a></h2><p>本节作为起步，主要涉及环境准备和项目创建，让大家对 Nuxt 项目有个整体认知。具体内容如下：</p><ul><li><p>开发环境和工具准备；</p></li><li><p>创建并完成第一个 Nuxt.js 应用；</p></li><li><p>如何打包和预览项目；</p></li><li><p>如何解决创建项目时可能出现的 443 错误。</p></li></ul><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><p>我们需要安装<code>node</code>作为<code>nuxt</code>的运行时，开发工具官方推荐使用<code>VS Code</code>，语法支持需要安装<code>Volar</code>插件。</p><ul><li><p>node.js lts；</p></li><li><p>VS Code；</p></li><li><p>Volar。</p></li></ul><h2 id="安装使用" tabindex="-1"><a class="header-anchor" href="#安装使用"><span>安装使用</span></a></h2><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h3><p>打开命令行终端，输入下面命令创建一个<code>Nuxt3</code>项目：</p><pre><code>npx nuxi init nuxt3-app\`\`\`&gt; 踩坑指南：如果因为众所周知的原因出现 443 错误，请参考本文最后一部分的操作指南。
</code></pre><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><p>可以使用喜欢的包管理工具安装和管理依赖，<code>npm</code>/<code>yarn</code>/<code>pnpm</code>均可：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">   yarn install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="启动项目" tabindex="-1"><a class="header-anchor" href="#启动项目"><span>启动项目</span></a></h3><p>使用 <code>yarn dev</code>以开发模式启动 nuxt:</p><pre><code>yarn dev
</code></pre><h3 id="预览项目" tabindex="-1"><a class="header-anchor" href="#预览项目"><span>预览项目</span></a></h3><p>✨浏览器会自动打开：<a href="http://localhost:3000/" target="_blank" rel="noopener noreferrer">http://localhost:3000</a></p><h2 id="最小应用" tabindex="-1"><a class="header-anchor" href="#最小应用"><span>最小应用</span></a></h2><p>在 <code>Nuxt</code> 中默认情况下有一个<code>app.vue</code>，如果我们只准备开发一个简单的单页应用或者就是一个落地页时，那么这样就够用了，此时<code>Nuxt</code>不会引入<code>vue- router</code>作为依赖。</p><p>但是这种情况很少见，我们通常需要创建不少页面再配置路由，并且在它们之间来回跳转。在 Nuxt 中要创建一个路由页面非常简单，你只需要创建一个<code>pages</code>目录，并创建一个<code>index.vue</code>这样的视图组件就好了，<code>Nuxt</code>会自动引入<code>vue- router</code>依赖，同时根据你创建的文件名称自动帮你配置一个路由。</p><p>下面我们来体验一下这个特性，我们创建<code>pages/index.vue</code>，并添加如下内容：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Index Page</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>想要生效还要对 app.vue 稍作修改：</p><ul><li><p>移除欢迎页面<code>&lt;NuxtWelcome /&gt;</code>；</p></li><li><p>添加一个路由出口<code>&lt;NuxtPage /&gt;</code>：</p><template><div><pre><code>&lt;!-- 路由出口 --&gt;
&lt;NuxtPage&gt;&lt;/NuxtPage&gt;
</code></pre></div></template></li></ul><p>下面我们可以输入 <a href="http://localhost:3000" target="_blank" rel="noopener noreferrer">http://localhost:3000</a> 看一下效果：</p><p><img src="`+s+`" alt=""></p><p>那如果我有另一个页面<code>detail.vue</code>想要跳转过去应该怎么做呢？</p><p>可以像下面这样，在<code>index.vue</code>中添加一个<code>NuxtLink</code>：</p><pre><code>&lt;template&gt;
  &lt;!-- ... --&gt;
  &lt;!--跳转链接--&gt;
  &lt;NuxtLink to=&quot;/detail&quot;&gt;Detail Page&lt;/NuxtLink&gt;
&lt;/template&gt;
</code></pre><p>现在可以自由的跳转了！</p><p><img src="`+n+`" alt=""></p><h2 id="打包和预览" tabindex="-1"><a class="header-anchor" href="#打包和预览"><span>打包和预览</span></a></h2><p>未来项目开发完毕，我需要打包并给用户提供预览服务。打开<code>package.json</code>，有如下 5 个命令：</p><ul><li><p>build：打包创建项目；</p></li><li><p>dev：启动开发服务器；</p></li><li><p>generate：生成静态网站；</p></li><li><p>preview：启动预览服务；</p></li><li><p>postinstall：生成 .nuxt 目录。</p></li></ul><h3 id="项目打包" tabindex="-1"><a class="header-anchor" href="#项目打包"><span>项目打包</span></a></h3><p>打开命令行终端，输入<code>build</code>命令打包项目：</p><pre><code>yarn build
</code></pre><blockquote><p>.output 目录即为打包结果。</p></blockquote><h3 id="预览服务" tabindex="-1"><a class="header-anchor" href="#预览服务"><span>预览服务</span></a></h3><p>打包结果想要被用户浏览，需要启动预览服务，执行<code>preview</code>命令即可：</p><pre><code>yarn preview
</code></pre><blockquote><p>可以输入终端提示的地址测试一下结果，例如我这里是：<a href="http://localhost:3000%E3%80%82" target="_blank" rel="noopener noreferrer">http://localhost:3000。</a></p><p>注意：这里是带有端口号的，未来可以在服务器配置<code>nginx</code>反向代理到该服务，用户就可以更方便地访问我们的站点。</p></blockquote><h2 id="项目创建错误踩坑指南" tabindex="-1"><a class="header-anchor" href="#项目创建错误踩坑指南"><span>项目创建错误踩坑指南</span></a></h2><p>由于众所周知的原因，有些小伙伴可能在第一步创建项目的时候就遇到如下错误：</p><pre><code>➜  nuxt-in-action npx nuxi init nuxt3-app                               
Nuxi 3.0.0                                                                   
 ERROR  Failed to download template from registry: request to 
 https://raw.githubusercontent.com/nuxt/starter/templates/templates/v3.json failed, 
 reason: connect ECONNREFUSED 0.0.0.0:443
</code></pre><p>这是因为<code>nuxi</code>在创建项目时需要到<code>raw.githubusercontent.com</code>拉取项目模版，由于域名解析失败导致创建流程失败。解决方案也很简单，我们可以获取这个网址的<code>ip</code>地址，并在<code>/etc/hosts</code>中配置好，这样就能够顺利拉取项目模版，并成功创建项目。</p><p>我们访问 <a href="http://ipaddress.com/website/raw.githubusercontent.com" target="_blank" rel="noopener noreferrer">ipaddress.com</a>，找到下面 IPv4 Addresses，例如：<code>185.199.108.133</code></p><p><img src="`+d+`" alt=""></p><p>然后添加该 ip 地址到 hosts，mac下 hosts 配置路径：<code>/etc/hosts</code>。</p><pre><code>sudo vi /etc/hosts
</code></pre><p>新增一行，<code>185.199.108.133 raw.githubusercontent.com</code>。</p><blockquote><p>vim操作步骤：</p><ul><li>输入<code>i</code>进入 insert 模式，添加完成；</li><li>输入<code>esc</code>退出 insert 模式；</li><li>最后输入<code>:wq</code>保存并退出。</li></ul></blockquote><p>添加完 host 后，再次执行<code>npx nuxi init nuxt-app</code>，创建成功！</p><p>其他情况：</p><ul><li><p>如果你是 windows 电脑，可以自行搜索：windows 如何修改 hosts 文件；</p></li><li><p>如果不想尝试或还是失败，可以直接克隆我们的范例项目即可。</p></li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>好了，本讲给大家展示了一个 Nuxt3 项目从创建到打包的完整流程。我自己在开发过程发现，创建项目时确实不那么稳定，即使按照本文的方案设置了 hosts，依然有创建失败的概率，大家可以克服一下，比如把这个项目提前存好，在开发的时候复制一份即可，不用每次都去 Github 拉取。</p><h2 id="下次预告" tabindex="-1"><a class="header-anchor" href="#下次预告"><span>下次预告</span></a></h2><p>这个基于文件的约定路由用起来可太方便了，但是还有不少常用需求，比如：</p><ul><li>嵌套路由怎么搞？</li><li>动态路由怎么搞？</li></ul><p>这些我们都会在下一讲中一一道来！</p>`,64)]))}const h=t(p,[["render",o],["__file","index.html.vue"]]),u=JSON.parse(`{"path":"/nuxt3/uku19ded/","title":"04-5 分钟快速创建并完成首个 Nuxt3 项目","lang":"zh-CN","frontmatter":{"title":"04-5 分钟快速创建并完成首个 Nuxt3 项目","author":"Your name","createTime":"2024/07/29 16:11:51","permalink":"/nuxt3/uku19ded/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;const isDark = um === 'dark' || (um !== 'light' && sm);document.documentElement.dataset.theme = isDark ? 'dark' : 'light';})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"内容概要","slug":"内容概要","link":"#内容概要","children":[]},{"level":2,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":2,"title":"安装使用","slug":"安装使用","link":"#安装使用","children":[{"level":3,"title":"创建项目","slug":"创建项目","link":"#创建项目","children":[]},{"level":3,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":3,"title":"启动项目","slug":"启动项目","link":"#启动项目","children":[]},{"level":3,"title":"预览项目","slug":"预览项目","link":"#预览项目","children":[]}]},{"level":2,"title":"最小应用","slug":"最小应用","link":"#最小应用","children":[]},{"level":2,"title":"打包和预览","slug":"打包和预览","link":"#打包和预览","children":[{"level":3,"title":"项目打包","slug":"项目打包","link":"#项目打包","children":[]},{"level":3,"title":"预览服务","slug":"预览服务","link":"#预览服务","children":[]}]},{"level":2,"title":"项目创建错误踩坑指南","slug":"项目创建错误踩坑指南","link":"#项目创建错误踩坑指南","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"下次预告","slug":"下次预告","link":"#下次预告","children":[]}],"readingTime":{"minutes":4.69,"words":1406},"git":{"createdTime":1722241276000,"updatedTime":1728783252000,"contributors":[{"name":"DengChang","email":"85365","commits":1},{"name":"xxdl","email":"xxdl@xxdl.top","commits":1}]},"filePathRelative":"notes/nuxt3/04-5 分钟快速创建并完成首个 Nuxt3 项目.md"}`);export{h as comp,u as data};
