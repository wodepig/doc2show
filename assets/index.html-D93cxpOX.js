import{_ as d,c as p,a as e,o as i}from"./app-D6s_7T7O.js";const s="/doc2show/img/21/1.png",l="/doc2show/img/21/2.png",r="/doc2show/img/21/3.png",a="/doc2show/img/21/4.png",c="/doc2show/img/21/5.png",o="/doc2show/img/21/6.png",n="/doc2show/img/21/7.png",h="/doc2show/img/21/8.png",m="/doc2show/img/21/9.png",g="/doc2show/img/21/10.png",u="/doc2show/img/21/11.png",_="/doc2show/img/21/12.png",E="/doc2show/img/21/13.png",T="/doc2show/img/21/14.png",b="/doc2show/img/21/15.png",M="/doc2show/img/21/16.png",I="/doc2show/img/21/17.png",y="/doc2show/img/21/18.png",w="/doc2show/img/21/19.png",L="/doc2show/img/21/20.png",f="/doc2show/img/21/21.png",x="/doc2show/img/21/22.png",D="/doc2show/img/21/23.png",S="/doc2show/img/21/24.png",A="/doc2show/img/21/25.png",k="/doc2show/img/21/26.png",N="/doc2show/img/21/27.png",R="/doc2show/img/21/28.png",v="/doc2show/img/21/29.png",B="/doc2show/img/21/30.png",Y={};function C(O,t){return i(),p("div",null,t[0]||(t[0]=[e('<h2 id="概要" tabindex="-1"><a class="header-anchor" href="#概要"><span>概要</span></a></h2><p>大家好，我是村长！</p><p>前面我们准备好了数据库开发环境，本讲我们给大家普及一下数据库设计和开发基础知识。</p><p>本节内容如下：</p><ul><li><p>用户管理；</p></li><li><p>数据库增删；</p></li><li><p>数据表设计；</p></li><li><p>数据 CRUD。</p></li></ul><h2 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理"><span>用户管理</span></a></h2><p>从安全角度讲，我们将来需要在应用中使用非 root 用户，则需要添加新的 MySQL 用户，并且不同用户可以赋予不同的用户权限。这个操作实际上是往 <code>mysql</code> 数据库中的 <code>user</code> 表添加新数据：</p><p>mysql数据库：</p><p><img src="'+s+'" alt=""></p><p>user表：</p><p><img src="'+l+'" alt=""></p><h3 id="增加新用户" tabindex="-1"><a class="header-anchor" href="#增加新用户"><span>增加新用户</span></a></h3><p>以下为添加用户的实例，新增一个普通用户，只能查看、新增和更新数据：</p><ul><li><p>用户名：57code；</p></li><li><p>密码为：666666；</p></li><li><p>操作权限：SELECT、INSERT、UPDATE。</p></li></ul><p>首先选择：mysql_db_container -&gt; 权限</p><p><img src="'+r+'" alt=""></p><p>选择数据库：例如 mysql</p><p><img src="'+a+'" alt=""></p><p>创建用户：</p><p><img src="'+c+'" alt=""></p><p>填入用户名和密码：</p><p><img src="'+o+'" alt=""></p><p>勾选权限：</p><p><img src="'+n+'" alt=""></p><p>点击“保存”，效果如下：</p><p><img src="'+h+'" alt=""></p><h2 id="数据库增删改" tabindex="-1"><a class="header-anchor" href="#数据库增删改"><span>数据库增删改</span></a></h2><p>前面我们操作的是 mysql 数据库，开发中每个应用基本都有对应的数据库。</p><h3 id="创建数据库" tabindex="-1"><a class="header-anchor" href="#创建数据库"><span>创建数据库</span></a></h3><p>下面我们创建一个羊村学堂数据库<code>ycxt</code></p><p>点击“创建数据库”：</p><p><img src="'+m+'" alt=""></p><p>填入数据库名称：编码可以默认。</p><p><img src="'+g+'" alt=""></p><p>创建成功，效果如下：</p><p><img src="'+u+'" alt=""></p><h3 id="修改数据库" tabindex="-1"><a class="header-anchor" href="#修改数据库"><span>修改数据库</span></a></h3><p>点击“修改数据库”：</p><p><img src="'+_+'" alt=""></p><p>可以修改名称和编码，也可以删库（就是删库跑路的那个删库<sup>_</sup>）：</p><p><img src="'+E+'" alt=""></p><h2 id="数据表设计" tabindex="-1"><a class="header-anchor" href="#数据表设计"><span>数据表设计</span></a></h2><p>有了数据库，就可以创建具体的数据表。数据表由若干字段组成，首先我们要了解字段都有哪些数据类型。</p><h3 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h3><p>数据类型分几个大类：</p><ul><li>字符串：指 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET，具体范围如下：</li></ul><table><thead><tr><th>类型</th><th>大小</th><th>用途</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255 bytes</td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255 bytes</td><td>不超过 255 个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0-255 bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535 bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215 bytes</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295 bytes</td><td>极大文本数据</td></tr></tbody></table><ul><li>数值：包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL 和 NUMERIC)，以及近似数值数据类型(FLOAT、REAL 和 DOUBLE PRECISION)。具体范围如下：</li></ul><table><thead><tr><th>类型</th><th>大小</th><th>范围（有符号）</th><th>范围（无符号）</th><th>用途</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 Bytes</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 Bytes</td><td>(-32 768，32 767)</td><td>(0，65 535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 Bytes</td><td>(-8 388 608，8 388 607)</td><td>(0，16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 Bytes</td><td>(-2 147 483 648，2 147 483 647)</td><td>(0，4 294 967 295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 Bytes</td><td>(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td>(0，18</td><td></td></tr><tr><td>446 744 073 709 551 615)</td><td>极大整数值</td><td></td><td></td><td></td></tr><tr><td>FLOAT</td><td>4 Bytes</td><td>(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351</td><td></td><td></td></tr><tr><td>E-38，3.402 823 466 351 E+38)</td><td>0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td>单精度</td><td></td><td></td></tr><tr><td>浮点数值</td><td></td><td></td><td></td><td></td></tr><tr><td>DOUBLE</td><td>8 Bytes</td><td>(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4</td><td></td><td></td></tr><tr><td>E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td></td><td></td><td></td><td></td></tr><tr><td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>双精度 浮点数值</td><td></td><td></td><td></td></tr><tr><td>DECIMAL</td><td>对DECIMAL(M,D) 如果M&gt;D，为M+2，否则为D+2</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>小数值</td></tr></tbody></table><ul><li>日期和时间：表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR</li></ul><table><thead><tr><th>类型</th><th>大小</th><th>范围</th><th>格式</th><th>用途</th></tr></thead><tbody><tr><td>DATE</td><td>3bytes</td><td>1000-01-01/9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3bytes</td><td>&#39;-838:59:59&#39;/&#39;838:59:59&#39;</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1bytes</td><td>1901/2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8bytes</td><td>&#39;1000-01-01 00:00:00&#39; 到 &#39;9999-12-31 23:59:59&#39;</td><td>YYYY-MM-DD</td><td></td></tr><tr><td>hh:mm:ss</td><td>混合日期和时间值</td><td></td><td></td><td></td></tr><tr><td>TIMESTAMP</td><td>4bytes</td><td>&#39;1970-01-01 00:00:01&#39; UTC 到 &#39;2038-01-19 03:14:07&#39; UTC结束时间是第</td><td></td><td></td></tr><tr><td>2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td>YYYY-MM-DD</td><td></td><td></td><td></td></tr><tr><td>hh:mm:ss</td><td>混合日期和时间值，时间戳</td><td></td><td></td><td></td></tr></tbody></table><ul><li><p>二进制。</p></li><li><p>几何图形。</p></li></ul><h3 id="数据表增删" tabindex="-1"><a class="header-anchor" href="#数据表增删"><span>数据表增删</span></a></h3><p>了解了都有哪些数据类型可用之后，我们尝试创建并设计一张表，在选择各种字段类型时，原则是够用即可，太大了浪费空间，太小了会丢失信息。</p><p>下面我们创建一张课程表<code>course</code>，我们未来希望像下面这样展示课程：</p><p><img src="'+T+'" alt=""></p><p>则我们需要如下字段：</p><ul><li><p>封面 - cover ；</p></li><li><p>价格 - price ；</p></li><li><p>原价 - t_price ；</p></li><li><p>标题 - title ；</p></li><li><p>描述信息 - desc 。</p></li></ul><p>点击“创建表”：</p><p><img src="'+b+'" alt=""></p><p>填写表名和字段列表，这里做一些说明：</p><ul><li>Id 为主键，设置整数 int，自增 AI；</li><li>cover 为封面 url，设置为可变字符串，最大长度 255；</li><li>price 和 t_price 为小数 decimal(5,2)，精度 5，标度 2，即最大 5 位数，小数点后面两位；</li><li>title 为标题， 设置为可变字符串，最大长度 50</li><li>desc 为课程详情，设置为文本 text，最大长度 65535。</li></ul><p><img src="'+M+'" alt=""></p><p>点击“保存”，效果如下：</p><p><img src="'+I+'" alt=""></p><h2 id="数据crud" tabindex="-1"><a class="header-anchor" href="#数据crud"><span>数据CRUD</span></a></h2><p>有了表，就要有数据，下面演示常见增删改查操作，即大家常说的 CRUD boy。</p><h3 id="创建数据" tabindex="-1"><a class="header-anchor" href="#创建数据"><span>创建数据</span></a></h3><p>对于我们新手来讲，可视化方式插入语句比较亲切，可以选中 course 表之后，点击“新建数据”：</p><p><img src="'+y+'" alt=""></p><p>填入必要字段：这里 id 数据库会自动填入：</p><p><img src="'+w+'" alt=""></p><p>点击保存，结果如下：</p><p><img src="'+L+`" alt=""></p><p>当然，我们也可以使用 <strong>INSERT INTO</strong> SQL 语句来插入数据：</p><pre><code>INSERT INTO table_name ( field1, field2,...fieldN )
       VALUES ( value1, value2,...valueN );
</code></pre><p>点击“SQL 命令”：</p><p><img src="`+f+'" alt=""></p><p>输入如下 SQL 语句：</p><pre><code>INSERT INTO `course` (`cover`, `price`, `t_price`, `title`, `desc`)\nVALUES (&#39;https://wechatapppro-1252524126.file.myqcloud.com/appwhrkrsz84443/image/b_u_62a4204687f44_cOGIFKdC/l4gf7c0s0770.jpeg&#39;, &#39;299.00&#39;, &#39;399.00&#39;, &#39;Vue源码全家桶&#39;, &#39;&lt;h3&gt;Vue源码全家桶剖析加手写&lt;/h3&gt;\\r\\n&lt;ul&gt;&lt;li&gt;Vue2 + Vue3&lt;/li&gt;&lt;li&gt;Vue-Router&lt;/li&gt;&lt;li&gt;Vuex + Pinia&lt;/li&gt;&lt;/ul&gt;&#39;);\n</code></pre><p>点击“执行”，结果如下：</p><p><img src="'+x+'" alt=""></p><p>查看一下结果，两条数据都在了：</p><p><img src="'+D+'" alt=""></p><h3 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据"><span>更新数据</span></a></h3><p>可视化更新数据可以点击数据条目前面的“编辑”链接：</p><p><img src="'+S+'" alt=""></p><p><img src="'+A+'" alt=""></p><p>当然，我们可以使用 SQL 语句，这样可以更新不止一条数据：</p><pre><code>UPDATE `course` SET\n`id` = &#39;1&#39;,\n`cover` = &#39;https://wechatapppro-1252524126.file.myqcloud.com/appwhrkrsz84443/image/b_u_62a4204687f44_cOGIFKdC/l4e6hk9v0562.png&#39;,\n`price` = &#39;299.00&#39;,\n`t_price` = &#39;399.00&#39;,\n`title` = &#39;Vue3 开源组件库实战&#39;,\n`desc` = &#39;&lt;h3&gt;从架构到发布全流程实战&lt;/h3&gt;\\r\\n&lt;p&gt;Vue3 + Vite2 + VitePress + TSX + Tailwind&lt;/p&gt;&#39;\nWHERE `id` = &#39;1&#39;;\n</code></pre><h3 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据"><span>查询数据</span></a></h3><p>可视化查询数据可以添加各种查询条件，缩小查找范围，从而快速找到需要的数据。</p><p>比如想要排序，点击字段名称即可，像下面这样点击 price 可以按照价格排序数据：</p><p><img src="'+k+'" alt=""></p><p><img src="'+N+'" alt=""></p><p>如果要增加搜索条件，可以点击字段名称后面的“两道杠”，比如下面的方法可以查询价格小于 300 的课程：</p><p><img src="'+R+'" alt=""></p><p><img src="'+v+'" alt=""></p><p>通过以上方法同时也可以构造出复杂的查询语句。</p><h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h3><p>可视化删除可以先选中数据条目，然后“删除”按钮：</p><p><img src="'+B+'" alt=""></p><p>当然，也可以使用 SQL 命令，这样也能够删除多条数据：</p><pre><code>DELETE FROM `course` WHERE `id` = &#39;2&#39;;\n</code></pre><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>虽说后续我们会使用 Prisma 这样的 ORM 框架避免让大家直接跟数据库打交道，或者编写 SQL 语句。</p><p>但是，这些基础还是非常重要的，我们就算不直接设计表，还是要设计数据模型，依然要知道数据类型怎么设置。就算我们不直接编写 SQL，还是要接触一些迁移用的 SQL 文件，或者查看操作结果。</p><p>因此如果你不太熟悉数据库，我还是建议大家多多尝试本节的一些操作。</p><h2 id="下次预告" tabindex="-1"><a class="header-anchor" href="#下次预告"><span>下次预告</span></a></h2><p>在我们真正开始服务端开发前，接口设计也是非常重要的一步。例如我们在一个前后端分离的团队中，不能仅靠口口相传来对接口，而是应该有一套标准流程和文档。</p><p>下一节，我们将使用 APIFox 给大家演示如何高效完成这个流程。</p>',111)]))}const V=d(Y,[["render",C],["__file","index.html.vue"]]),P=JSON.parse(`{"path":"/nuxt3/3olhps22/","title":"21-MySQL 数据库设计和开发基础","lang":"zh-CN","frontmatter":{"title":"21-MySQL 数据库设计和开发基础","author":"Your name","createTime":"2024/07/29 16:11:51","permalink":"/nuxt3/3olhps22/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;const isDark = um === 'dark' || (um !== 'light' && sm);document.documentElement.dataset.theme = isDark ? 'dark' : 'light';})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"概要","slug":"概要","link":"#概要","children":[]},{"level":2,"title":"用户管理","slug":"用户管理","link":"#用户管理","children":[{"level":3,"title":"增加新用户","slug":"增加新用户","link":"#增加新用户","children":[]}]},{"level":2,"title":"数据库增删改","slug":"数据库增删改","link":"#数据库增删改","children":[{"level":3,"title":"创建数据库","slug":"创建数据库","link":"#创建数据库","children":[]},{"level":3,"title":"修改数据库","slug":"修改数据库","link":"#修改数据库","children":[]}]},{"level":2,"title":"数据表设计","slug":"数据表设计","link":"#数据表设计","children":[{"level":3,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":3,"title":"数据表增删","slug":"数据表增删","link":"#数据表增删","children":[]}]},{"level":2,"title":"数据CRUD","slug":"数据crud","link":"#数据crud","children":[{"level":3,"title":"创建数据","slug":"创建数据","link":"#创建数据","children":[]},{"level":3,"title":"更新数据","slug":"更新数据","link":"#更新数据","children":[]},{"level":3,"title":"查询数据","slug":"查询数据","link":"#查询数据","children":[]},{"level":3,"title":"删除数据","slug":"删除数据","link":"#删除数据","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"下次预告","slug":"下次预告","link":"#下次预告","children":[]}],"readingTime":{"minutes":6.91,"words":2072},"git":{"createdTime":1722241276000,"updatedTime":1728783252000,"contributors":[{"name":"DengChang","email":"85365","commits":1},{"name":"xxdl","email":"xxdl@xxdl.top","commits":1}]},"filePathRelative":"notes/nuxt3/21-MySQL 数据库设计和开发基础.md"}`);export{V as comp,P as data};
